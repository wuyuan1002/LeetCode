package main

// 470. 用 Rand7() 实现 Rand10()

// func main() {

// }

// 定理：若rand_n()能等概率生成1到n的随机整数，则有(rand_n() - 1) * n + rand_n()能
// 　　　等概率生成1到n * n的随机整数。
//
// 解释： rand()7能等概率生成1~7,
// 　　　rand7() - 1能等概率生成0~6,
// 　　　(rand7() - 1) * 7能等概率生成{0, 7, 14, 21, 28, 35, 42},
// 　　　(rand7() - 1) * 7 + rand7()能等概率生成1~49。
func rand10() int {
	for {
		// 得到1-49的随机数
		x := rand7()
		n := (x-1)*7 + rand7()
		if n <= 40 {
			// 大于40的拒绝采样
			return n%10 + 1
		}

		// 得到1-63的随机数
		x = n - 40            // 得到1-9的随机数
		n = (x-1)*7 + rand7() // 得到8 * 7 + 7 = 63的随机数
		if n <= 60 {
			// 大于60的拒绝采样
			return n%10 + 1
		}

		// 得到1-21的随机数
		n = n - 60            // 得到1-3的随机数
		n = (x-1)*7 + rand7() // 得到2 * 7 + 7 = 21的随机数
		if n <= 20 {
			// 大于20的拒绝采样
			return n%10 + 1
		}
	}
}

func rand7() int {
	return 0
}
