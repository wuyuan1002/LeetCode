package main

// 905. 按奇偶排序数组

// 给你一个整数数组 nums，将 nums 中的的所有偶数元素移动到数组的前面，后跟所有奇数元素。
//
// 返回满足此条件的 任一数组 作为答案。

// sortArrayByParity .
//
// 双指针
// 题目不要求奇偶数保持在原来数组中的相对顺序，所有可以使用双指针分别从左和从右指向遇到的奇数和偶数，
// 然后将其进行交换，直到两指针相遇
//
// 若题目要求保持相对顺序，那么不能使用双指针交换的方式，而是需要使用一个临时数组用来储存结果，
// 遍历原数组将结果填充到结果数组中
func sortArrayByParity(nums []int) []int {

	// 双指针 -- l从左往右遍历寻找偶数、r从右往左遍历寻找奇数
	l, r := 0, len(nums)-1

	// 不断从两边寻找奇数和偶数并交换，直到两指针相遇
	for l < r {
		for l < r && nums[l]%2 == 0 {
			l++
		}
		for l < r && nums[r]%2 == 1 {
			r--
		}
		if l < r {
			nums[l], nums[r] = nums[r], nums[l]
		}
	}

	return nums
}
