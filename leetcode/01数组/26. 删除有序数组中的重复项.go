package main

// 26. 删除有序数组中的重复项

// 给你一个有序数组 nums ，请你原地删除重复出现的元素，使每个元素只出现一次 ，返回删除后数组的新长度。
//
// 不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。

// removeDuplicates .
// 双指针 -- 左指针及前面的都是已经确定好没有重复元素的
// 因为数组本身有序，所以右指针指向的数字一定大于或等于左指针指向的数字
func removeDuplicates(nums []int) int {
	i, j := 0, 0
	for j < len(nums) {
		// 若右指针指向数字大于左指针指向数字，说明此时右指针指向数字第一次出现，将右指针数字交换到左指针的下一位
		if nums[j] > nums[i] {
			i++
			nums[i], nums[j] = nums[j], nums[i]
		}
		// 每次循环都将右指针向后移动一位
		j++
	}

	// 最终左指针及其前面的数字就是不重复的数字
	return i + 1
}
